[
    uuid(4B324FC8-1670-01D3-1278-5A47BF6EE188),
    version(3.0),
    ms_union,
    pointer_default(unique)
]
interface srvsvc
{
    typedef [handle, string] wchar_t* SRVSVC_HANDLE;
    typedef struct certificate
    {
        [unique] [string] wchar_t* ServerName;
        [unique] [string] wchar_t* Subject;
        [unique] [string] wchar_t* Issuer;
        [unique] [string] wchar_t* Thumbprint;
        [unique] [string] wchar_t* FriendlyName;
        [unique] [string] wchar_t* NotBefore;
        [unique] [string] wchar_t* NotAfter;
        [unique] [string] wchar_t* StoreName;
        [unique] [string] wchar_t* StoreLocation;
        [unique] [string] wchar_t* StructMember9;
        long 	Flags;
        long 	Type;
    }certificate;

    typedef [switch_type(unsigned long)] union certificate_container
    {
        [case(0)] [unique] struct certificate* cert;
        /* no default member to print for this Union.
        An exception will be raised if the switch_is value does not match any of the cases values */
    } certificate_container;
    
    void Opnum00NotUsedOnWire(void);
    void Opnum01NotUsedOnWire(void);
    void Opnum02NotUsedOnWire(void);
    void Opnum03NotUsedOnWire(void);
    void Opnum04NotUsedOnWire(void);
    void Opnum05NotUsedOnWire(void);
    void Opnum06NotUsedOnWire(void);
    void Opnum07NotUsedOnWire(void);
    void Opnum08NotUsedOnWire(void);
    void Opnum09NotUsedOnWire(void);
    void Opnum10NotUsedOnWire(void);
    void Opnum11NotUsedOnWire(void);
    void Opnum12NotUsedOnWire(void);
    void Opnum13NotUsedOnWire(void);
    void Opnum14NotUsedOnWire(void);
    void Opnum15NotUsedOnWire(void);
    void Opnum16NotUsedOnWire(void);
    void Opnum17NotUsedOnWire(void);
    void Opnum18NotUsedOnWire(void);
    void Opnum19NotUsedOnWire(void);
    void Opnum20NotUsedOnWire(void);
    void Opnum21NotUsedOnWire(void);
    void Opnum22NotUsedOnWire(void);
    void Opnum23NotUsedOnWire(void);
    void Opnum24NotUsedOnWire(void);
    void Opnum25NotUsedOnWire(void);
    void Opnum26NotUsedOnWire(void);
    void Opnum27NotUsedOnWire(void);
    void Opnum28NotUsedOnWire(void);
    void Opnum29NotUsedOnWire(void);
    void Opnum30NotUsedOnWire(void);
    void Opnum31NotUsedOnWire(void);
    void Opnum32NotUsedOnWire(void);
    void Opnum33NotUsedOnWire(void);
    void Opnum34NotUsedOnWire(void);
    void Opnum35NotUsedOnWire(void);
    void Opnum36NotUsedOnWire(void);
    void Opnum37NotUsedOnWire(void);
    void Opnum38NotUsedOnWire(void);
    void Opnum39NotUsedOnWire(void);
    void Opnum40NotUsedOnWire(void);
    void Opnum41NotUsedOnWire(void);
    void Opnum42NotUsedOnWire(void);
    void Opnum43NotUsedOnWire(void);
    void Opnum44NotUsedOnWire(void);
    void Opnum45NotUsedOnWire(void);
    void Opnum46NotUsedOnWire(void);
    void Opnum47NotUsedOnWire(void);
    void Opnum48NotUsedOnWire(void);
    void Opnum49NotUsedOnWire(void);
    void Opnum50NotUsedOnWire(void);
    void Opnum51NotUsedOnWire(void);
    void Opnum52NotUsedOnWire(void);
    void Opnum53NotUsedOnWire(void);
    void Opnum54NotUsedOnWire(void);
    void Opnum55NotUsedOnWire(void);
    void Opnum56NotUsedOnWire(void);
    void Opnum57NotUsedOnWire(void);
    void Opnum58NotUsedOnWire(void);
    void Opnum59NotUsedOnWire(void);
    void Opnum60NotUsedOnWire(void);
    void Opnum61NotUsedOnWire(void);
    void Opnum62NotUsedOnWire(void);
    void Opnum63NotUsedOnWire(void);
    void Opnum64NotUsedOnWire(void);
    void Opnum65NotUsedOnWire(void);
    void Opnum66NotUsedOnWire(void);
    void Opnum67NotUsedOnWire(void);
    void Opnum68NotUsedOnWire(void);
    void Opnum69NotUsedOnWire(void);
    void Opnum70NotUsedOnWire(void);
    void Opnum71NotUsedOnWire(void);
    void Opnum72NotUsedOnWire(void);
    void Opnum73NotUsedOnWire(void);
    long
        LocalrServerCertificateMappingModify(
            [in, string, unique] SRVSVC_HANDLE ServerName,
            [in]long arg_1,
            [in][out][switch_is(arg_1)]union certificate_container* arg_2
        );

}